name: Certora Compilation Check

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  silo-compilation-check:
    name: Silo, Factory, and Router Compilation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Certora CLI
      run: pip install certora-cli
      
    - name: Install Solidity compiler
      run: |
        wget https://github.com/ethereum/solidity/releases/download/v0.8.28/solc-static-linux
        chmod +x solc-static-linux
        sudo mv solc-static-linux /usr/local/bin/solc8.28
        
    - name: Create compilation-only versions of scripts
      run: |
        # Create temporary compilation-only versions of the scripts
        mkdir -p certora/scripts/compilation-only
        
        # Process runSilo.sh
        sed 's/certoraRun/certoraRun/g' certora/scripts/runSilo.sh | \
        sed 's/--server production/--compilation_steps_only/g' | \
        sed 's/--msg/--compilation_steps_only --msg/g' > certora/scripts/compilation-only/runSilo.sh
        
        # Process runFactory.sh
        sed 's/certoraRun/certoraRun/g' certora/scripts/runFactory.sh | \
        sed 's/--server production/--compilation_steps_only/g' > certora/scripts/compilation-only/runFactory.sh
        
        # Process runRouter.sh
        sed 's/certoraRun/certoraRun/g' certora/scripts/runRouter.sh | \
        sed 's/--server production/--compilation_steps_only/g' | \
        sed 's/--msg/--compilation_steps_only --msg/g' > certora/scripts/compilation-only/runRouter.sh
        
        # Make scripts executable
        chmod +x certora/scripts/compilation-only/*.sh
        
    - name: Run Silo compilation checks
      run: ./certora/scripts/compilation-only/runSilo.sh
        
    - name: Run Factory compilation checks
      run: ./certora/scripts/compilation-only/runFactory.sh
        
    - name: Run Router compilation checks
      run: ./certora/scripts/compilation-only/runRouter.sh

  vault-compilation-check:
    name: SiloVaults Compilation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Certora CLI
      run: pip install certora-cli
      
    - name: Install Solidity compiler
      run: |
        wget https://github.com/ethereum/solidity/releases/download/v0.8.28/solc-static-linux
        chmod +x solc-static-linux
        sudo mv solc-static-linux /usr/local/bin/solc8.28
        
    - name: Create compilation-only version of vault script
      run: |
        # Create temporary compilation-only version of runVault.sh
        mkdir -p certora/scripts/compilation-only
        
        # Process the script: keep patches, modify certoraRun commands
        awk '
          /^certoraRun/ {
            # Replace --server production with --compilation_steps_only
            gsub(/--server production/, "--compilation_steps_only")
            # If line has --msg but not --compilation_steps_only, add it before --msg
            if (match($0, /--msg/) && !match($0, /--compilation_steps_only/)) {
              gsub(/--msg/, "--compilation_steps_only --msg")
            }
            # If line has --rule but not --compilation_steps_only, add it after config file
            if (match($0, /--rule/) && !match($0, /--compilation_steps_only/)) {
              gsub(/\.conf/, ".conf --compilation_steps_only")
            }
            # If line has --verify but not --compilation_steps_only, add it after config file
            if (match($0, /--verify/) && !match($0, /--compilation_steps_only/)) {
              gsub(/\.conf/, ".conf --compilation_steps_only")
            }
            # If line has --exclude_rule but not --compilation_steps_only, add it after config file
            if (match($0, /--exclude_rule/) && !match($0, /--compilation_steps_only/)) {
              gsub(/\.conf/, ".conf --compilation_steps_only")
            }
            # If line has only config file and no other flags, add --compilation_steps_only
            if (!match($0, /--/) && match($0, /\.conf/)) {
              gsub(/\.conf/, ".conf --compilation_steps_only")
            }
          }
          { print }
        ' certora/scripts/runVault.sh > certora/scripts/compilation-only/runVault.sh
        
        chmod +x certora/scripts/compilation-only/runVault.sh
        
    - name: Run Vault compilation checks with patches
      run: ./certora/scripts/compilation-only/runVault.sh