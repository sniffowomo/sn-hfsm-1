{
  "files": [
    "certora/harness/SiloVaultHarness.sol",
    "certora/mocks/vaults/Market0.sol",
    // "certora/mocks/vaults/Market1.sol",
    "certora/mocks/vaults/Market2.sol",
    // "certora/mocks/vaults/Vault3.sol",
    "certora/mocks/Token0.sol",
    "silo-vaults/contracts/incentives/VaultIncentivesModule.sol",
    "certora/mocks/vaults/NotificationReceiver.sol",
    "silo-vaults/contracts/incentives/claiming-logics/SiloIncentivesControllerCL.sol",
    "silo-core/contracts/incentives/SiloIncentivesController.sol",
    "silo-core/contracts/incentives/base/DistributionManager.sol",
  ],
  "link": [
    "SiloVaultHarness:INCENTIVES_MODULE=VaultIncentivesModule",
    "SiloVaultHarness:incentivesClaimingLogic=SiloIncentivesControllerCL",
    // "SiloIncentivesControllerCL:SILO_INCENTIVES_CONTROLLER=SiloIncentivesController", // TODO: think (should we copy ..) 
    "SiloIncentivesControllerCL:VAULT_INCENTIVES_CONTROLLER=SiloIncentivesController", 
    "DistributionManager:NOTIFIER=Token0",
  ],
  "build_cache": true,
  "optimistic_loop": true,
  "loop_iter": "2",
  "optimistic_summary_recursion": true,
  "summary_recursion_limit": "0",
  "optimistic_contract_recursion": true,
  "contract_recursion_limit": "0",
  "prover_args": [ 
    "-enableCopyLoopRewrites true",
    "-summaryResolutionMode tiered",
    "-maxCommandCount 1500000",
    "-maxBlockCount 150000",    
   ],
  "rule_sanity": "basic",
  "solc": "solc8.28",
  "verify": "SiloVaultHarness:certora/specs/vaults/SiloVault.spec"
}