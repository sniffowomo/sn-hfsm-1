// SPDX-License-Identifier: BUSL-1.1
pragma solidity 0.8.28;

import {LiquidationHelper} from "silo-core/contracts/utils/liquidationHelper/LiquidationHelper.sol";

import {ILiquidationHelper} from "silo-core/contracts/interfaces/ILiquidationHelper.sol";
import {IPartialLiquidation} from "silo-core/contracts/interfaces/IPartialLiquidation.sol";
import {ISilo} from "silo-core/contracts/interfaces/ISilo.sol";
import {IntegrationTest} from "silo-foundry-utils/networks/IntegrationTest.sol";

/*
FOUNDRY_PROFILE=core_test forge test --mc LiquidationDebug_2025_05_26 --ffi -vvv
*/
contract LiquidationDebug_2025_05_26 is IntegrationTest {
    IPartialLiquidation constant internal hook = IPartialLiquidation(0xC6723803DB4dFaDF3D69bcD98c2c9734D465D4E8);
    // ILiquidationHelper constant internal helper = ILiquidationHelper(0xd98C025cf5d405FE3385be8C9BE64b219EC750F8);
    ILiquidationHelper internal helper;
    address internal swapAllowanceHolder = 0x0000000000001fF3684f28c67538d4D072C22734;
    address internal weth = 0x4200000000000000000000000000000000000006;

    function setUp() public {
        vm.label(weth, "WETH");
        vm.label(address(helper), "LiquidationHelper");
        vm.label(address(hook), "IPartialLiquidation");
        vm.label(swapAllowanceHolder, "SWAP AllowanceHolder");

        vm.createSelectFork(
            "https://rpc-gel.inkonchain.com",
            14568229 - 1
        );

        helper = new LiquidationHelper(
            weth,
            swapAllowanceHolder,
            payable(0xE8e8041cB5E3158A0829A19E014CA1cf91098554)
        );
    }

    /*
    FOUNDRY_PROFILE=core_test forge test --mc LiquidationDebug_2025_05_26 --mt test_skip_liquidation_20250526 --ffi -vvv
    */
    function test_skip_liquidation_20250526() public {
        address user = 0x62a4A8f9f5F3AaE9Ee9CEE780285A0D501C12d09;
        ISilo flashLoanFrom = ISilo(0x5e7Dfe2Ab5321125dD30E7D177bD544d83427D2a);
        vm.label(address(flashLoanFrom), "flashLoanFrom");

        ILiquidationHelper.LiquidationData memory liquidation = ILiquidationHelper.LiquidationData(
            hook, weth, user
        );

        ILiquidationHelper.DexSwapInput[] memory dexSwapInput = new ILiquidationHelper.DexSwapInput[](1);

        dexSwapInput[0] = ILiquidationHelper.DexSwapInput({
            sellToken: weth,
            allowanceTarget: swapAllowanceHolder,
            swapCallData: hex"2213bc0b0000000000000000000000007be040f599ed9230037eb115d7efce5b638b92230000000000000000000000004200000000000000000000000000000000000006000000000000000000000000000000000000000000000000009199d5995cee810000000000000000000000007be040f599ed9230037eb115d7efce5b638b922300000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000006a41fff991f0000000000000000000000004a630d0def9b65ea12f3aaf63ab9611ceff215820000000000000000000000000200c29006150606b650577bbe7b6248f58470c10000000000000000000000000000000000000000000000000000000006274f4a00000000000000000000000000000000000000000000000000000000000000a0e104de082ba47493ba5abae100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000000e4c1fb425e0000000000000000000000007be040f599ed9230037eb115d7efce5b638b92230000000000000000000000004200000000000000000000000000000000000006000000000000000000000000000000000000000000000000009199d5995cee810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006831627900000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020438c9c1470000000000000000000000004200000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000271000000000000000000000000063951637d667f23d5251dedc0f9123d22d8595be000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000124c04b8d59000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000007be040f599ed9230037eb115d7efce5b638b9223000000000000000000000000000000000000000000000000000000006831627900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b42000000000000000000000000000000000000060000640200c29006150606b650577bbe7b6248f58470c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064c876d21d000000000000000000000000f5c4f3dc02c3fb9279495a8fef7b0741da9561570000000000000000000000000200c29006150606b650577bbe7b6248f58470c10000000000000000000000000000000000000000000000000000000006399b9d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012438c9c1470000000000000000000000000200c29006150606b650577bbe7b6248f58470c1000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000200c29006150606b650577bbe7b6248f58470c1000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000ad01c20d5886137e056775af56915de824c8fce50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
        });

        vm.prank(0x0665609124CC2a958Cf0ED582eE132076243B6Da);
        // 	_liquidation.hook	address	0x2D2628f0434a5ed57601f6506d492849260193bA
        // 	_liquidation.collateralAsset	address	0x82aF49447D8a07e3bd95BD0d56f35241523fBab1
        // 	_liquidation.user	address	0xDaE3B7D951621b6600A88234246858e741AA70BB
        helper.executeLiquidation({
            _flashLoanFrom: flashLoanFrom,
            _debtAsset: 0x0200C29006150606B650577BBE7B6248F58470c1,
            _maxDebtToCover: 104533043,
            _liquidation: liquidation,
            _dexSwapInput: dexSwapInput
        });
    }
}
